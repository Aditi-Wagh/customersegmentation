# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WtYus8x7Zh8n4vPRFJ7bSib9gvYyTXa1
"""

from google.colab import files
import io
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

uploaded=files.upload()
df = pd.read_csv(io.BytesIO(uploaded['Mall_Customers.csv']))

df.shape



plt.figure(figsize=(15,5))
sns.countplot(y="Gender",data=df)
plt.show()

plt.figure(1,figsize=(15,7))
n=0
for cols in ['Age','Annual Income (k$)','Spending Score (1-100)']:
  n+=1
  plt.subplot(1 ,3 ,n)
  sns.set(style="whitegrid")
  plt.subplots_adjust(hspace=0.5 ,wspace=0.5)
  sns.violinplot(x=cols,y='Gender',data=df)
  plt.ylabel('Gender' if n==1 else "")
  plt.title("Violin plot")
plt.show()

x=df.loc[:, ["Annual Income (k$)","Spending Score (1-100)"]].values
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(12,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker='8')
plt.xlabel("k value")
plt.ylabel("WCSS")
plt.show()

kmeans=KMeans(n_clusters=5)
label=kmeans.fit_predict(x)
print(label)

print(kmeans.cluster_centers_)



plt.scatter(x[:,0],x[:,1],c=kmeans.labels_,cmap="rainbow")
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color="black")
plt.title("Cluster of customers")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score")
plt.show()

x1=df.loc[:, ["Age","Spending Score (1-100)"]].values
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(x1)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(12,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker='8')
plt.xlabel("k value")
plt.ylabel("WCSS")
plt.show()

kmeans=KMeans(n_clusters=5)
label=kmeans.fit_predict(x1)
print(label)

plt.scatter(x1[:,0],x1[:,1],c=kmeans.labels_,cmap="rainbow")
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color="black")
plt.title("Cluster of customers")
plt.xlabel("Age")
plt.ylabel("Spending Score")
plt.show()

x2=df.iloc[:,2:]
from sklearn.cluster import KMeans
wcss=[]
for k in range(1,11):
  kmeans=KMeans(n_clusters=k,init="k-means++")
  kmeans.fit(x2)
  wcss.append(kmeans.inertia_)
plt.figure(figsize=(12,6))
plt.grid()
plt.plot(range(1,11),wcss,linewidth=2,color="red",marker='8')
plt.xlabel("k value")
plt.ylabel("WCSS")
plt.show()

kmeans=KMeans(n_clusters=5)
label=kmeans.fit_predict(x1)
print(label)

print(kmeans.cluster_centers_)

clusters=kmeans.fit_predict(x2)
df['label']=clusters
from mpl_toolkits.mplot3d import Axes3D
fig=plt.figure(figsize=(20,10))
ax=fig.add_subplot(111,projection='3d')
ax.scatter(df.Age[df.label==0],df['Annual Income (k$)'][df.label==0],df["Spending Score (1-100)"][df.label==0],c="blue")
ax.scatter(df.Age[df.label==1],df['Annual Income (k$)'][df.label==1],df["Spending Score (1-100)"][df.label==1],c="red")
ax.scatter(df.Age[df.label==2],df['Annual Income (k$)'][df.label==2],df["Spending Score (1-100)"][df.label==2],c="green")
ax.scatter(df.Age[df.label==3],df['Annual Income (k$)'][df.label==3],df["Spending Score (1-100)"][df.label==3],c="orange")
ax.scatter(df.Age[df.label==4],df['Annual Income (k$)'][df.label==4],df["Spending Score (1-100)"][df.label==4],c="purple")
ax.view_init(30,185)